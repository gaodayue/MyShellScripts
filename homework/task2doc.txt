#author : gaodayue
#date : 2011/10/27
我在我们组主要承担task2的编码工作，其使用方法如下【假设该脚本文件名为task2.sh】:
$ sh task2.sh -p [目录名]
	--将会打印[目录名]下文件的相同行信息
$ sh task2.sh -e [文件名] [目录名]
	--将会将-p的信息输出到[文件名]中
$ sh task2.sh -r [目录名]
	--将会删除[目录名]下文件中的相同行

############################ 核心思路 ############################
1)先判断用户输入的选项参数，选择执行响应功能：
  -p 对应 printsameline函数
  -x 对应 extract函数
  -r 对应 remove函数
2)再执行parse_same_line().该函数解析文件中的相同行信息，并将结果保存到.sameline与.havingsameline文件中。
  .sameline文件存放出现的相同行，.havingsameline文件存放拥有相同行的文件名
  该函数为该脚本的核心函数，稍后会详细讲解
3)最后由printsameline等函数根据.sameline与.havingsameline两个文件的内容进行相应的处理
4)删除.sameline与.havingsameline文件

##################### parse_same_line ############################
==================================================================
对[目录名]下的文件使用'grep -Fxf file1 file2'两两比较相同的行
相同的行存入.sameline文件中
拥有相同行的文件名存入.havesameline
==================================================================

比如[目录名]下有如下三个文件：
--------------1.txt----------->
1txtline1
1txtline2
1txtline3
---------------------------------<
--------------2.txt----------->
2txtline1
2txtline2
1txtline3
2txtline4
---------------------------------<
--------------3.txt----------->
3txtline1
1txtline3
3txtline3
4txtline4
2txtline1
------------------------------------------------------------------
则生成的.sameline文件内容为：
1txtline3
2txtline1
生成的.havingsameline文件内容为：
1.txt 2.txt 3.txt
2.txt 3.txt
